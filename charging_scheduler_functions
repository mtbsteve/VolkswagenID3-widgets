on({id: "0_userdata.0.chargingState"/*chargingState*/, change: "ne"}, function (obj) {
  var value = obj.state.val;
  var oldValue = obj.oldState.val;
  if (getState("0_userdata.0.timeractive").val == true) {
    if (getState("vw-connect.0.WVWZZZE1ZMYVINHERE.remote.charging").val == false && compareTime(getState("0_userdata.0.starttime").val, getState("0_userdata.0.endtime").val, "between", null)) {
      setStateDelayed('vw-connect.0.WVWZZZE1ZMMYVINHERE.remote.charging', true, true, parseInt(0, 10), false);
      console.log('DEBUG: charging w timer  starts');
    } else if (getState("vw-connect.0.WVWZZZE1ZMYVINHERE.remote.charging").val == true) {
      setStateDelayed('vw-connect.0.WVWZZZE1ZMYVINHERE.remote.charging', false, true, parseInt(0, 10), false);
      console.log('DEBUG: Charging w timer  stops');
    } else {
      if (getState("0_userdata.0.chargingState").val == true && getState("0_userdata.0.timercharging").val == false) {
        setStateDelayed('0_userdata.0.timercharging', true, false, parseInt(0, 10), false);
        console.log('DEBUG Timer charging set to active');
      } else if (getState("0_userdata.0.chargingState").val == false) {
        setStateDelayed('0_userdata.0.timercharging', false, false, parseInt(0, 10), false);
        setStateDelayed('0_userdata.0.chargingState', false, false, parseInt(0, 10), false);
        console.log('DEBUG deactivate timer charging and release charging  button');
      }
    }
  } else {
    if (getState("vw-connect.0.WVWZZZE1ZMYVINHERE.remote.charging").val == false && getState("0_userdata.0.chargingState").val == true) {
      setStateDelayed('vw-connect.0.WVWZZZE1ZMYVINHERE.remote.charging', true, true, parseInt(0, 10), false);
      console.log('DEBUG: charging w/o timer  starts');
    } else {
      setStateDelayed('vw-connect.0.WVWZZZE1ZMYVINHERE.remote.charging', false, true, parseInt(0, 10), false);
      console.log('DEBUG: charging w/o timer  stops');
    }
  }
});

0 == true;

schedule('{"time":{"start":"00:00","end":"23:59","mode":"minutes","interval":1},"period":{"days":1}}', function () {
  if (getState("logparser.0.filters.Error.json").val != '[]') {
    sendTo("pushsafer", "send", {
       message: 'Problem with VW WeConnectID Server',
       sound: "5",
       vibration: ""
    });
    console.debug("pushsafer: " + 'Problem with VW WeConnectID Server');
    setStateDelayed('logparser.0.filters.Error.emptyJson', true, true, parseInt(100, 10), false);
  }
  if (getState("vw-connect.0.WVWZZZE1ZMYVINHERE.remote.charging").val == true && getState("0_userdata.0.timeractive").val == true) {
    if (compareTime(getState("0_userdata.0.endtime").val, null, ">=", null)) {
      setStateDelayed('vw-connect.0.WVWZZZE1ZMYVINHERE.remote.charging', false, true, parseInt(0, 10), false);
      setStateDelayed('0_userdata.0.chargingState', false, false, parseInt(0, 10), false);
      console.log('DEBUG: time exceeded charging stops and button is released');
    }
  } else if (getState("vw-connect.0.WVWZZZE1ZMYVINHERE.remote.charging").val == false && getState("0_userdata.0.timeractive").val == true) {
    if (compareTime(getState("0_userdata.0.starttime").val, null, ">=", null)) {
      setStateDelayed('vw-connect.0.WVWZZZE1ZMYVINHERE.remote.charging', true, true, parseInt(0, 10), false);
      console.log('DEBUG: starttime reached and charging starts');
    }
  } else if (getState("vw-connect.0.WVWZZZE1ZMYVINHERE.status.chargingStatus.chargingState").val == 'charging' && getState("0_userdata.0.timeractive").val == false) {
    setStateDelayed('0_userdata.0.chargingState', true, false, parseInt(0, 10), false);
    console.log('DEBUG: car was charging but not shown in iobroker');
  } else if (getState("vw-connect.0.WVWZZZE1ZMYVINHERE.status.chargingStatus.chargingState").val != 'charging' && getState("0_userdata.0.timeractive").val == false) {
    setStateDelayed('0_userdata.0.chargingState', false, false, parseInt(0, 10), false);
    console.log('DEBUG: pop out charging button ');
  }
});
